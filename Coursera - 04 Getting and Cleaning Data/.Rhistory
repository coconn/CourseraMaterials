date()
install.packages("xlsx")
library("xlsx")
?read.xlsx2
?read.xlsx
install.packages("XML")
library(data.table)
DF = data.frame(x=rnorm(9), y=rep("a","b","c"),each=3), z=rnorm(9)
head(DF, 3)
DF = data.frame(x=rnorm(9), y=rep(c("a","b","c"),each=3), z=rnorm(9)
head(DF, 3)
zhuidh\\
DF = data.frame(x=rnorm(9), y=rep(c("a","b","c"),each=3), z=rnorm(9))
head(DF, 3)
library(data.table)
DT = table(x=rnorm(9), y=rep(c("a","b","c"),each=3), z=rnorm(9))
head(DT, 3)
DT = table(x=rnorm(9), y=rep(c("a","b","c"),each=3), z=rnorm(9))
head(DT, 3)
DT = data.table(x=rnorm(9), y=rep(c("a","b","c"),each=3), z=rnorm(9))
head(DT, 3)
tables()
DT[2,]
DT[DT$y=="a",]
DT[c(2,3)]
DT[,c(2,3)]
DT[,list(mean(x),sum(z))]
DT[,table(y)]
DT[,w:=z^2]
DT
DT[,m:={tmp <- (x+z); log2(tmp+5)}]
DT
DT[,a:=x>0]
DT
DT[,b:=mean(x+w),by=a]
DT
DT <- data.table(x=sample(letters[1:3], 1E5, TRUE))
DT[,.N, by=x]
DT$x
DT <- data.table(x=rep(c("a","b","c"),each=1000), y=rnorm(300))
setkey(DT,x)
DT['a']
?merge
DT1 <- data.table(x=c("a","b","c","dt1"), y=1:4)
DT2 <- data.table(x=c("a","b","dt2"), z=5:7)
setkey(DT1,x)
setkey(DT2,x)
merge(DT1,DT2)
DT1 <- data.table(x=c("a","a","b","dt1"), y=1:4)
DT2 <- data.table(x=c("a","b","dt2"), z=5:7)
setkey(DT1,x)
setkey(DT2,x)
merge(DT1,DT2)
# fast reading from the disk
big_df <- data.frame(x=rnorm(1E6),y=rnomr(1E6))
file <- tempfile()
write.table(big_df, file=file, row.names=FALSE, col.names = TRUE, sep="\t", quote=FALSE)
system.time(fread(file))
big_df <- data.frame(x=rnorm(1E6),y=rnorm(1E6))
file <- tempfile()
write.table(big_df, file=file, row.names=FALSE, col.names = TRUE, sep="\t", quote=FALSE)
system.time(fread(file))
system.time(fread(file))
system.time(read.table(file, header=TRUE, sep="\t"))
getwd()
getwd()
getwd() # ok
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "./quiz1data.csv", method = "curl") # relative path
dateDownloaded <- date()
cameraData <- read.table("./quiz1data.csv", sep=",", header=TRUE)
quiz1data <- read.table("./quiz1data.csv", sep=",", header=TRUE)
View(quiz1data)
?subset
subset(quiz1data, VAL==24)
tmp <- subset(quiz1data, VAL==24)
View(tmp)
dim(tmp)
dim(tmp)
length(tmp)
dim(tmp)[1]
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx "
download.file(fileUrl, destfile = "./quiz1data_b.csv", method = "curl") # relative path
dateDownloaded_b <- date()
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileUrl, destfile = "./quiz1data_b.xlsx", method = "curl") # relative path
dateDownloaded_b <- date()
library("xlsx")
?read.xls()
?read.xlsx()
18:23
read.xlsx("./quiz1data_b.xlsx", rowIndex=18:23, colIndex=7:15)
read.xlsx("./quiz1data_b.xlsx", sheet=1 rowIndex=18:23, colIndex=7:15)
read.xlsx("./quiz1data_b.xlsx", sheet=1, rowIndex=18:23, colIndex=7:15)
read.xlsx("./quiz1data_b.xlsx", sheet=1, rowIndex=c(18:23), colIndex=7:15)
c(18:23)
read.xlsx("./quiz1data_b.xlsx", sheet=1, rowIndex=c(18:23), colIndex=c(7:15)
)
read.xlsx("./quiz1data_b.xlsx", sheetIndex=1, rowIndex=c(18:23), colIndex=c(7:15))
read.xlsx("./quiz1data_b.xlsx", sheetIndex=1, rowIndex=18:23, colIndex=7:15)
tmp <- read.xlsx("./quiz1data_b.xlsx", sheetIndex=1, rowIndex=18:23, colIndex=7:15)
dat <- read.xlsx("./quiz1data_b.xlsx", sheetIndex=1, rowIndex=18:23, colIndex=7:15)
sum(dat$Zip*dat$Ext,na.rm=T)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl, useInternal=TRUE)
library(XML)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl, useInternal=TRUE)
?xmlTreeParse
fileUrl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl, useInternal=TRUE)
rootNode <- xmlRoot(doc)
rootNode
names (rootNode) # show the elements
names(rootNode) # show the elements
xmlName(rootNode)
names(rootNode) # show the elements
rootNode[[1]]
doc <- xmlTreeParse(fileUrl, useInternal=TRUE)
rootNode <- xmlRoot(doc)
rootNode[[1]]
rootNode[[1]][[1]]
rootNode[[1]][[1]][[3]]
rootNode[[1]][[1]][[2]]
xmlSApply(rootNode, xmlValue) # will go get every tagged value in the domument
xmlValue
xmlSApply(rootNode, "//name", xmlValue) # will go get every tagged value in the domument
xmlSApply(rootNode, "//zipcode", xmlValue) # will go get every tagged value in the domument
rootNode[[1]][[1]][[2]] # gets me a zipcode
xmlSApply(rootNode, "///zipcode", xmlValue) # will go get every tagged value in the domument
xpathSApply(rootNode, "///zipcode", xmlValue) # will go get every tagged value in the domument
xpathSApply(rootNode, "//zipcode", xmlValue) # will go get every tagged value in the domument
xpathSApply(rootNode, "/zipcode", xmlValue) # will go get every tagged value in the domument
xpathSApply(rootNode, "//zipcode", xmlValue) # will go get every tagged value in the domument
tmp <- xpathSApply(rootNode, "//zipcode", xmlValue) # will go get every tagged value in the domument
tmp2 <- (tmp==21231)
tmp2
sum(tmp2)
dim(tmp2)
length(tmp2)
sum(tmp==21231)
getwd() # ok
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileUrl, destfile = "./quiz1data_c.csv") # relative path
download.file(fileUrl, destfile = "./quiz1data_c.csv", method = "curl") # relative path
dateDownloaded_c <- date()
quiz1data_c <- read.table("./quiz1data_c.csv", sep=",", header=TRUE)
?fread
fread("./quiz1data_c.csv")
quiz1data_c <- fread("./quiz1data_c.csv")
View(quiz1data_c)
DT <- fread("./quiz1data_c.csv")
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15)
mean(DT[DT$SEX==2,]$pwgtp15))
?system.time
system.time({
mean(DT[DT$SEX==1,]$pwgtp15)
mean(DT[DT$SEX==2,]$pwgtp15)
})
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time({rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]})
system.time({rowMeans(DT)[DT$SEX==1]
rowMeans(DT)[DT$SEX==2]})
rowMeans(DT)[DT$SEX==1]
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(DT[,mean(pwgtp15),by=SEX])
getwd()
read.fortran("./getdata-wksst8110.for")
read.fortran?
duiew
?read.fortran
read.fwf("./getdata-wksst8110.for", widths=c(9,2,2,2,2), skip = 3)
read.fwf("./getdata-wksst8110.for", widths=c(10,2,2,2,2), skip = 3)
read.fwf("./getdata-wksst8110.for", widths=c(10,2,2,2,2), skip = 3, sep = "     ")
read.fwf("./getdata-wksst8110.for", widths=c(10,2,2,2,2), skip = 3, sep = "")
read.fwf("./getdata-wksst8110.for", widths=c(10,3,2,2,2), skip = 3, sep = "")
read.fwf("fix.txt", widths=c(2,2,2,2,2))
read.fwf("fix.txt", widths=c(2,2,2))
read.fwf("fix.txt", widths=c(5,5))
read.fwf("fix.txt", widths=c(-3,2,-3,2))
read.fwf("./getdata-wksst8110.for", widths=c(10,-5,2,2,2), skip = 3)
read.fwf("./getdata-wksst8110.for", widths=c(10,-5,4,2,2), skip = 3)
read.fwf("./getdata-wksst8110.for", widths=c(10,-5,4,4,2), skip = 3)
read.fwf("./getdata-wksst8110.for", widths=c(10,-5,4,4,-5,4,4,-5,4,4), skip = 3)
read.fwf("./getdata-wksst8110.for", widths=c(10,-5,4,4,-5,4,4,-5,4,4,-5,4,4), skip = 3)
read.fwf("./getdata-wksst8110.for", widths=c(10,-5,4,4,-5,4,4,-5,4,4,-5,4,4), skip = 3)
tab <- read.fwf("./getdata-wksst8110.for", widths=c(10,-5,4,4,-5,4,4,-5,4,4,-5,4,4), skip = 3)
View(tab)
tab <- read.fwf("./getdata-wksst8110.for", widths=c(10,-5,4,4,-5,4,4,-5,4,4,-5,4,4), skip = 3, header=TRUE)
tab <- read.fwf("./getdata-wksst8110.for", widths=c(10,-5,4,4,-5,4,4,-5,4,4,-5,4,4), skip = 3, header=TRUE)
?read.fwf
tab <- read.fwf("./getdata-wksst8110.for", widths=c(10,-5,4,4,-5,4,4,-5,4,4,-5,4,4), skip = 3, header=TRUE, sep="")
tab <- read.fwf("./getdata-wksst8110.for", widths=c(10,-5,4,4,-5,4,4,-5,4,4,-5,4,4), skip = 3)
View(tab)
colnames(tmp) <- read.table(file=file, nrow=1, as.is=TRUE)
colnames(tab) <- read.table(file=file, nrow=1, as.is=TRUE)
colnames(tab) <- read.table(file="./getdata-wksst8110.for", nrow=1, as.is=TRUE)
tmp
tab
View(tab)
tab <- read.fwf("./getdata-wksst8110.for", widths=c(10,-5,4,4,-5,4,4,-5,4,4,-5,4,4), skip = 4)
View(tab)
tmp <- tab$V4
View(tab)
class(tmp)
class(tmp)
sum(tmp)
?lattice
library(lattice)
?histogram
xyplot(Ozone ~ Wind, data=airquality)
airquality <- transform(airquality, Month = factor)
airquality <- transform(airquality, Month = factor(Month))
xyplot(Ozone ~ Wind, data = airquality, layout-c(5,1))
xyplot(Ozone ~ Wind, data = airquality, layout=c(5,1))
xyplot(Ozone ~ Wind | Month, data = airquality, layout=c(5,1))
library(ggplot)
library(ggplot2)
?ggplot
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, geom = c("point","smooth")) # modify aesthetics
qplot(displ, hwy, data = mpg, geom = c("smooth")) # add a new geom - points themselves and then the loess smooth
qplot(hwy, data = mpg, fill = drv) # 1 var --> histogram
qplot(hwy, data = mpg, facets = .~drv) # facets
qplot(hwy, data = mpg, facets = .~drv, binwidth = 2) # facets
qplot(displ, hwy, data = mpg, facets = .~drv) # facets
str(maacs)
qplot(log(eno), data = maacs, geom = "density") # density smooth
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
g
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
install.packages("mgcv")
install.packages("mgcv")
library(ggplot2)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality)
testdat <- data.frame(x=1:100,y=rnorm(100))
testdat[50,2] <- 100 # outlier
g <- ggplot(testdat, aes(x=x,y=y))
g + geom_line
g + geom_line()
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim=c(-3,3))
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim=c(-3,3))
